name: Check elements

on:
  schedule:
    - cron: "20 0 * * *"

jobs:
  deploy:

    runs-on: ubuntu-latest

    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Update flask-openapi3-elements
        id: update_elements
        run: |
          cd ./flask-openapi3-elements/flask_openapi3_elements
          old_version=$(cat __version__.py | grep -oP '(?<=__version__ = ").*(?=")')
          new_version=$(npm show elements version)
          if [ "${new_version}" != "${old_version}" ]; then
            curl -L https://cdn.jsdelivr.net/npm/@stoplight/elements@${new_version}/web-components.min.js \
                 -o ./templates/elements/js/web-components.min.js
            curl -L https://cdn.jsdelivr.net/npm/@stoplight/elements@${new_version}/styles.min.css \
                 -o ./templates/elements/css/styles.min.css
            echo -e "# -*- coding: utf-8 -*-\n\n__version__ = \"${new_version}\"" > __version__.py
            echo "new_version=${new_version}" >> $GITHUB_OUTPUT
            echo "is_update=true" >> $GITHUB_OUTPUT
          else
            echo "is_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Git Commit
        if: ${{ steps.update_elements.outputs.is_update == 'true' }}
        id: git_commit
        run: |
          new_version=${{ steps.update_elements.outputs.new_version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update elements ${new_version}"
          git push origin master

      - name: Release flask-openapi3-elements
        if: ${{ steps.git_commit.outcome == 'success' }}
        run: |
          cd flask-openapi3-elements
          python -m build
          twine upload dist/*
